<%% content_for :head do %>
<script type="text/javascript" charset="utf-8">
Ext.onReady(function(){
	var items = [
		<%= model_instance.class.content_columns.collect{ |column| "{ name: '#{column.name}' }" }.join(",\n") %>
	]
	
	var js = new Ext.data.JsonStore({
		url: '<%%= formatted_list_backend_<%= plural_name %>_path(:json) %>',                                       
		root: '<%= plural_name %>',
		id: 'id',                                            
		fields: items
	});
	
	js.on('load', function() {
		var <%= plural_name %> = Ext.data.Record.create(items);

		var selections = new Ext.grid.CheckboxSelectionModel();

		var ds = new Ext.data.Store({
			proxy: new Ext.ux.data.PagingMemoryProxy(js.reader.jsonData),
			reader: js.reader,
			remoteSort: true
		});
		
		//Uncomment this whit your default sort
		//ds.setDefaultSort('created_at', 'desc');

		var grid = new Ext.grid.GridPanel({
			store: ds,
			viewConfig: { forceFit: true },
			clicksToEdit: 'auto',
			enableColumnHide:false,
			enableColumnMove:false,
			border:false,
			bodyBorder:false,
			cls:'grid',
			title:'All <%= plural_name.capitalize %>',
			iconCls:'icon-show-all',
			region:'center',
			sm: selections,
			columns: [
				selections,
				<%= model_instance.class.content_columns.collect{ |column| "{
						id: '#{column.name}',
						header: '#{column.human_name}',
						dataIndex: '#{column.name}' 
					}" }.join(",") %>   
			],
			tbar: [
				{
					id:'add',
					text: 'Add',
					disabled:false,
					cls: 'x-btn-text-icon add',
					handler:add
				},'-',{
					id:'edit',
					text: 'Edit',
					disabled:true,
					cls: 'x-btn-text-icon edit',
					handler:edit
				},'-',{
					id:'remove',
					text:'Delete',
					disabled:true,
					cls:'x-btn-text-icon remove',
					handler:remove
				},'->',
					'Search:', ' ',
					 new Ext.app.SearchField({
						pageSize: Ext.util.pageSize,
						store: ds,
						items: items,
						width:320
					 })
			],
			bbar: new Ext.PagingToolbar({
				pageSize: Ext.util.pageSize,
				store: ds,
				displayInfo: true,
				displayMsg: '<%= plural_name.capitalize %> {0} - {1} of {2}',
				emptyMsg: "No <%= singular_name %> to display"
			})
		});

		selections.on('selectionchange', function(){
			var n = selections.getSelected();
			var btns = grid.getTopToolbar().items.map;

	    if(!n){
	    	btns.remove.disable();
				btns.edit.disable();
	      return;
			} else {
				btns.remove.enable();
				btns.edit.enable();
				return;
	    }
		});

		ds.on('remove', function(ds, record, index){
			mask();
			new Ajax.Request(record.id, 
											 {method:'delete', parameters:'id='+id, onSuccess:unmask, onFailure:unmask});
		});
		
		grid.getBottomToolbar().on('render', function(){ 	grid.getBottomToolbar().loading.hide(); });
		
		function mask(){
			Lipsiadmin.app.mask('Sending data to server...');
		}

		function unmask(){
			Lipsiadmin.app.unmask();
		}

		function add(){
			window.location = 'new'
		}

		function edit(){
			window.location = selections.getSelected().id+'/edit'
		}

		function remove(){
			Ext.Msg.confirm('Are you sure?', 'Do you want permanently '+selections.getCount()+' element/s?', function(btn, text){
				if (btn == 'yes'){
					selections.each(function(r){
						ds.remove(r);
					})
				}
			});
		}

		Lipsiadmin.app.addItem(grid);
		ds.load(Ext.util.Pagination);
	});
	
	Lipsiadmin.app.mask("Retrive data from server");
	js.load();
});
</script>
<%% end %>