//  
//  Created by Davide D'Agostino on 2007-12-15.
//  Copyright 2007 Lipsiasoft s.r.l.. All rights reserved.
// 
Ext.BLANK_IMAGE_URL = '/javascripts/resources/images/default/s.gif'; 
Ext.namespace('Lipsiadmin');

Ext.Updater.defaults.loadScripts = true;
Ext.Updater.defaults.showLoadIndicator = false;

Ext.util.Format.eurMoney = function(v){
	v = (Math.round((v-0)*100))/100;
	v = (v == Math.floor(v)) ? v + ".00" : ((v*10 == Math.floor(v*10)) ? v + "0" : v);
	return "â‚¬" + v ;
};

Ext.util.Format.boolRenderer = function(v){
	if (v){
		return '<img src="/images/backend/flag_green.gif" width="14" height="11" />'
	}else{
		return '<img src="/images/backend/flag_red.gif" width="14" height="11" />'
	}
}

function showMessages(transport){
	Ext.Msg.alert('Attention', transport.responseText);
}

// Tree DropConfig to allow Drop on Leaf
var treeDropConfig = { getDropPoint : function(e, n, dd){ var tn = n.node; if(tn.isRoot){ return tn.allowChildren !== false ? "append" : false; } var dragEl = n.ddel; var t = Ext.lib.Dom.getY(dragEl), b = t + dragEl.offsetHeight; var y = Ext.lib.Event.getPageY(e); var noAppend = tn.allowChildren === false; if(this.appendOnly || tn.parentNode.allowChildren === false){ return noAppend ? false : "append"; } var noBelow = false; if(!this.allowParentInsert){ noBelow = tn.hasChildNodes() && tn.isExpanded(); } var q = (b - t) / (noAppend ? 2 : 3); if(y >= t && y < (t + q)){ return "above"; }else if(!noBelow && (noAppend || y >= b-q && y <= b)){ return "below"; }else{ return "append"; } }, completeDrop : function(de){ var ns = de.dropNode, p = de.point, t = de.target; if(!Ext.isArray(ns)){ ns = [ns]; } var n; for(var i = 0, len = ns.length; i < len; i++){ n = ns[i]; if(p == "above"){ t.parentNode.insertBefore(n, t); }else if(p == "below"){ t.parentNode.insertBefore(n, t.nextSibling); }else{ t.leaf = false; t.appendChild(n); } } n.ui.focus(); if(this.tree.hlDrop){ n.ui.highlight(); } t.ui.endDrop(); this.tree.fireEvent("nodedrop", de); } }

// Fix for Prototype Adapter
Ext.lib.Event.getTarget = function(e){ 
  var ee = e.browserEvent || e; 
  return ee.target ? Event.element(ee) : null;  
};

Lipsiadmin.app = function(){
	return {
		init : function(id, message){
			Ext.QuickTips.init();
			
			<% for project_module in current_account.project_modules %>
				this.backend<%= project_module.uid %>Panel = new Ext.Panel({
					frame:true,
					title: '<%= project_module.human_name %>',
					collapsible:true,
					contentEl:'backend-<%= project_module.uid %>',
					titleCollapse: true
				});
				<% @panels << "this.backend#{project_module.uid}Panel" %>
			<% end %>

			this.actionPanel = new Ext.Panel({
				id:'action-panel',
				region:'west',
				split:true,
				collapsible: true,
				collapseMode: 'mini',
				width:200,
				minWidth: 150,
				border: false,
				baseCls:'x-plain',
				items: [<%= @panels.join(",") %>]
			});

			this.headerPanel = new Ext.Panel({
				contentEl:'header',
				region:'north',
				border: false
			});
			
			this.contentDynamic = new Ext.Panel({
				id:'dynamic',
				autoLoad: { url: '<%= welcome_path %>' },
				region:'center',
				border:false,
				layout:'fit'
			});
			
			this.viewport = new Ext.Viewport({
				layout:'border',
				items: [this.headerPanel, this.actionPanel, this.contentDynamic]
			});
		}, // init
		
		loadMenu : function(url, method, format, unmask){
		  if (!unmask) { this.mask(); }
		  if (!method) { method = 'get' };
		  if (!format) { format = 'html' };
		  this.contentDynamic.getUpdater().update({ url:url, params: {format:format, '_method':method}, callback:this.fade });
		}, // loadMenu
		
		update : function(html, unmask){
		  if (!unmask) { this.mask(); }
		  this.contentDynamic.body.update(html, true);
		  this.fade();
		}, // update

		fade : function(){
		  Ext.get('dynamic').fadeIn({duration:.5});
		}, // fade
		
		submitForm : function(){
		  Ext.get('admin-form').dom.submit();
      Ext.Msg.wait(Lipsiadmin.locale.wait.msg, Lipsiadmin.locale.wait.title);
		}, // submitForms

		addItem : function(item){
		  var items = [];
      this.contentDynamic.items.each(function(i){ items.push(i) });
      for (var i=0; i < items.length; i++) { this.contentDynamic.remove(items[i]) };
			this.contentDynamic.add(item);
			this.contentDynamic.doLayout();
			this.unmask();
		},// addItem
		
		addBody : function(withHeader){
			if (withHeader){
				this.contentHeader = new Ext.Panel({
					contentEl:'content-header',
					region:'north',
					border:false
				});

				this.contentMain = new Ext.Panel({
					contentEl:'content-main',
					autoScroll:true,
					region:'center',
					border:false
				});

				this.contentPanel = new Ext.Panel({
					id:'content',
					region:'center',
					layout:'border',
					border:false,
					items: [this.contentHeader, this.contentMain]
				});
			} else {
				this.contentPanel = new Ext.Panel({
					contentEl:'content-main',
					autoScroll:true,
					border: false,
					region:'center',
					layout:'fit'
				});
			}
			this.addItem(this.contentPanel);
		}, // addBody
		
		addBodyTabs : function(withHeader, tabId){
		  Ext.get('content-main').applyStyles('padding:0px');			

			if (withHeader){
				this.contentHeader = new Ext.Panel({
					contentEl:'content-header',
					region:'north',
					border:false
				});
				
				this.tabPanel = new Ext.TabPanel({
				  renderTo:tabId,
				  deferredRender:false,
					layoutOnTabChange:true,
					enableTabScroll:true,
          border:false,
          region:'center',
					defaults: { autoScroll:true, layout:'fit' }
		    });
				
				this.contentMain = new Ext.Panel({
		      contentEl:'content-main',
					region:'center',
					border:false,
					layout:'border',
					items: this.tabPanel
				});

				this.contentPanel = new Ext.Panel({
					id:'content',
					region:'center',
					layout:'border',
					border:false,
					items: [this.contentHeader, this.contentMain]
				});
				
				this.addItem(this.contentPanel);
				
			} else {
				this.tabPanel = new Ext.TabPanel({
					contentEl:'content-main',
					visibility:'visibility',
					region: 'center',
					autoScroll:true,
					border:true,
					layout:'border',
					bodyStyle:'border-bottom:none;border-top:none;background-color:#FFF'
				});
			  this.addItem(this.tabPanel);
			}
		}, // addBodyTabs		
    
		doLayout : function(){
			this.contentPanel.doLayout();
		}, //doLayout
		
    addTab : function(id, title, show){
      var tab = this.tabPanel.add({ id: id, contentEl: id, title: title });
      if (show) { tab.show(); }
			this.doLayout();
    }, // addTab
    
		getTabPanel: function() {
			return this.tabPanel 
		}, // getTabPanel 
    
		mask : function(text){
			if (text == null || text.length == 0) { text = Ext.LoadMask.prototype.msg }
			this.contentDynamic.el.mask(text, 'x-mask-loading');
		}, // mask
		
		unmask : function(){
			this.contentDynamic.el.unmask();
		} // unmask
		
	} // return
}();
Ext.onReady(Lipsiadmin.app.init, Lipsiadmin.app, true);